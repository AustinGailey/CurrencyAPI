name: Currency API

on:
  push:
    branches: 
      - master 

jobs:

  MESSAGING:
    runs-on: ubuntu-latest
    steps:
      # - name: Invoke deployment hook
      #   uses: distributhor/workflow-webhook@v2
      #   env:
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      #     webhook_secret: ${{ secrets.SLACK_WEBHOOK_SECRET }}
      - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.16.0
      with:
        channel-id: C02PB8E6XRQ
        slack-message: 'posting from a github action!'
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}


  CI:
    runs-on: ubuntu-latest
    steps:   
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      - name:  Virtual ENV
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Activate Virtual ENV
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run Tests   
        run: . venv/bin/activate && pytest

      - name: Create archive of dependencies
        run: |
          cd ./venv/lib/python3.7/site-packages
          zip -r9 ../../../../api.zip .

      - name: Add API files to Zip file
        run: cd ./api && zip -g ../api.zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Upload to S3
        run: aws s3 cp api.zip s3://currencyproject/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name currencyapi --s3-bucket currencyproject --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  API-TESTS:
    runs-on: ubuntu-latest
    needs: [CD]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run API Tests
        id: run-newman
        uses: anthonyvscode/newman-action@v1
        with:
          collection: tests/postman_tests.json
          reporters: cli

      - name: Output summary to console
        run: echo ${{ steps.run-newman.outputs.summary }}

